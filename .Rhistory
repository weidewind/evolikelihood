apropos(fisher)
apropos("fisher")
fisher.test(еид)
fisher.test(tbl)
h3_antigenic_koel = c(161, 171, 172, 174, 175, 205, 209)
group <- h3_antigenic_koel
rvectors <- lapply(rpart, function(row){
splittedrow <- unlist(strsplit(row, '\\s+'))
my_params <- lapply( tail(splittedrow, length(splittedrow)), function(elm){
elm
})
})
df <- data.frame(matrix(unlist(rvectors), nrow=length(rvectors), byrow=T),stringsAsFactors=FALSE)
rownames(df) <- df[,1]
df <- df[,seq(2, ncol(df), 1)]
group_pattern <- sapply(group, function (e){
paste(c("^", e, "\\."), collapse = "")
})
grepper <- paste(group_pattern,collapse="|")
group_nodes <- grep(grepper, rownames(df))
group_df <- df[group_nodes,]
compl_nodes <- !(seq(1,nrow(df),1) %in% group_nodes)
compl_df <- df[compl_nodes,]
ageing <- sapply(seq(1, categories, 1), function(cat){
if (best[[1]]$params[cat,"p"] > 1){TRUE} else {FALSE}
})
ageing_g <- sum(sapply(group_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_g <- sum(sapply(group_df[,!(ageing)], function(e){sum(as.numeric(e))}))
ageing_c <- sum(sapply(compl_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_c <- sum(sapply(compl_df[,!(ageing)], function(e){sum(as.numeric(e))}))
tbl <- matrix(c(ageing_g, adapt_g, ageing_c, adapt_c), ncol = 2, byrow = TRUE, nrow = 2)
colnames(tbl) <- c("ageing", "adapt")
rownames(tbl) <- c("group", "compl")
prot <- "h3"
categories <- 3
model <- "weibull" # weibull or exponential
data("mygroups")
prot_groups <-mygroups[grep(paste(c("^", prot, "_"), collapse = ""), names(mygroups))]
em_output <- parse_em_output(prot, model, categories)
best <- best_output(em_output)
path <- file.path(getwd(), "output", "wood_likelihood", model, prot, names(best), fsep = .Platform$file.sep)
em_file <-  readLines(path)
zeroline <- tail(grep('^\\s+\\[,1\\]', em_file,  value = FALSE, perl = TRUE), 1)
lowpart <- em_file[seq(zeroline+1,length(em_file),1)]
lastline <- head(grep('^\\[1\\]', lowpart,  value = FALSE, perl = TRUE), 1)
rpart <- lowpart[seq(1, lastline-1, 1)]
h3_antigenic_koel = c(161, 171, 172, 174, 175, 205, 209)
group <- h3_antigenic_koel
rvectors <- lapply(rpart, function(row){
splittedrow <- unlist(strsplit(row, '\\s+'))
my_params <- lapply( tail(splittedrow, length(splittedrow)), function(elm){
elm
})
})
df <- data.frame(matrix(unlist(rvectors), nrow=length(rvectors), byrow=T),stringsAsFactors=FALSE)
rownames(df) <- df[,1]
df <- df[,seq(2, ncol(df), 1)]
group_pattern <- sapply(group, function (e){
paste(c("^", e, "\\."), collapse = "")
})
grepper <- paste(group_pattern,collapse="|")
group_nodes <- grep(grepper, rownames(df))
group_df <- df[group_nodes,]
compl_nodes <- !(seq(1,nrow(df),1) %in% group_nodes)
compl_df <- df[compl_nodes,]
ageing <- sapply(seq(1, categories, 1), function(cat){
if (best[[1]]$params[cat,"p"] > 1){TRUE} else {FALSE}
})
ageing_g <- sum(sapply(group_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_g <- sum(sapply(group_df[,!(ageing)], function(e){sum(as.numeric(e))}))
ageing_c <- sum(sapply(compl_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_c <- sum(sapply(compl_df[,!(ageing)], function(e){sum(as.numeric(e))}))
tbl <- matrix(c(ageing_g, adapt_g, ageing_c, adapt_c), ncol = 2, byrow = TRUE, nrow = 2)
colnames(tbl) <- c("ageing", "adapt")
rownames(tbl) <- c("group", "compl")
fisher.test(tbl)
prot <- "h3"
categories <- 3
model <- "weibull" # weibull or exponential
data("mygroups")
prot_groups <-mygroups[grep(paste(c("^", prot, "_"), collapse = ""), names(mygroups))]
em_output <- parse_em_output(prot, model, categories)
best <- best_output(em_output)
path <- file.path(getwd(), "output", "wood_likelihood", model, prot, names(best), fsep = .Platform$file.sep)
em_file <-  readLines(path)
zeroline <- tail(grep('^\\s+\\[,1\\]', em_file,  value = FALSE, perl = TRUE), 1)
lowpart <- em_file[seq(zeroline+1,length(em_file),1)]
lastline <- head(grep('^\\[1\\]', lowpart,  value = FALSE, perl = TRUE), 1)
rpart <- lowpart[seq(1, lastline-1, 1)]
count_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(count_cores)
clusterExport(cl, list("prot", "rpart", "prot_groups", "splitted", "model", "categories", "best"), envir = environment())
clusterCall(cl, function() library(evolike))
prot_groups_names <- names(prot_groups)
em_results_list <- parLapply(cl, prot_groups_names, function(group_name){
sink (file.path(getwd(), "output","group_likelihood", "chisq", model, prot, group_name, fsep = .Platform$file.sep))
group <- prot_groups[group_name][[1]]
rvectors <- lapply(rpart, function(row){
splittedrow <- unlist(strsplit(row, '\\s+'))
my_params <- lapply( tail(splittedrow, length(splittedrow)), function(elm){
elm
})
})
df <- data.frame(matrix(unlist(rvectors), nrow=length(rvectors), byrow=T),stringsAsFactors=FALSE)
rownames(df) <- df[,1]
df <- df[,seq(2, ncol(df), 1)]
group_pattern <- sapply(group, function (e){
paste(c("^", e, "\\."), collapse = "")
})
grepper <- paste(group_pattern,collapse="|")
group_nodes <- grep(grepper, rownames(df))
group_df <- df[group_nodes,]
compl_nodes <- !(seq(1,nrow(df),1) %in% group_nodes)
compl_df <- df[compl_nodes,]
ageing <- sapply(seq(1, categories, 1), function(cat){
if (best[[1]]$params[cat,"p"] > 1){TRUE} else {FALSE}
})
ageing_g <- sum(sapply(group_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_g <- sum(sapply(group_df[,!(ageing)], function(e){sum(as.numeric(e))}))
ageing_c <- sum(sapply(compl_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_c <- sum(sapply(compl_df[,!(ageing)], function(e){sum(as.numeric(e))}))
tbl <- matrix(c(ageing_g, adapt_g, ageing_c, adapt_c), ncol = 2, byrow = TRUE, nrow = 2)
colnames(tbl) <- c("ageing", "adapt")
rownames(tbl) <- c("group", "compl")
print(tbl)
print(chisq.test(tbl))
print(fisher.test(tbl))
sink()
})
stopCluster(cl)
prot <- "n1"
categories <- 4
model <- "weibull" # weibull or exponential
data("mygroups")
prot_groups <-mygroups[grep(paste(c("^", prot, "_"), collapse = ""), names(mygroups))]
em_output <- parse_em_output(prot, model, categories)
best <- best_output(em_output)
path <- file.path(getwd(), "output", "wood_likelihood", model, prot, names(best), fsep = .Platform$file.sep)
em_file <-  readLines(path)
zeroline <- tail(grep('^\\s+\\[,1\\]', em_file,  value = FALSE, perl = TRUE), 1)
lowpart <- em_file[seq(zeroline+1,length(em_file),1)]
lastline <- head(grep('^\\[1\\]', lowpart,  value = FALSE, perl = TRUE), 1)
rpart <- lowpart[seq(1, lastline-1, 1)]
count_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(count_cores)
clusterExport(cl, list("prot", "rpart", "prot_groups", "splitted", "model", "categories", "best"), envir = environment())
clusterCall(cl, function() library(evolike))
prot_groups_names <- names(prot_groups)
em_results_list <- parLapply(cl, prot_groups_names, function(group_name){
sink (file.path(getwd(), "output","group_likelihood", "chisq", model, prot, group_name, fsep = .Platform$file.sep))
group <- prot_groups[group_name][[1]]
rvectors <- lapply(rpart, function(row){
splittedrow <- unlist(strsplit(row, '\\s+'))
my_params <- lapply( tail(splittedrow, length(splittedrow)), function(elm){
elm
})
})
df <- data.frame(matrix(unlist(rvectors), nrow=length(rvectors), byrow=T),stringsAsFactors=FALSE)
rownames(df) <- df[,1]
df <- df[,seq(2, ncol(df), 1)]
group_pattern <- sapply(group, function (e){
paste(c("^", e, "\\."), collapse = "")
})
grepper <- paste(group_pattern,collapse="|")
group_nodes <- grep(grepper, rownames(df))
group_df <- df[group_nodes,]
compl_nodes <- !(seq(1,nrow(df),1) %in% group_nodes)
compl_df <- df[compl_nodes,]
ageing <- sapply(seq(1, categories, 1), function(cat){
if (best[[1]]$params[cat,"p"] > 1){TRUE} else {FALSE}
})
ageing_g <- sum(sapply(group_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_g <- sum(sapply(group_df[,!(ageing)], function(e){sum(as.numeric(e))}))
ageing_c <- sum(sapply(compl_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_c <- sum(sapply(compl_df[,!(ageing)], function(e){sum(as.numeric(e))}))
tbl <- matrix(c(ageing_g, adapt_g, ageing_c, adapt_c), ncol = 2, byrow = TRUE, nrow = 2)
colnames(tbl) <- c("ageing", "adapt")
rownames(tbl) <- c("group", "compl")
print(tbl)
print(chisq.test(tbl))
print(fisher.test(tbl))
sink()
})
stopCluster(cl)
prot <- "n2"
categories <- 3
model <- "weibull" # weibull or exponential
data("mygroups")
prot_groups <-mygroups[grep(paste(c("^", prot, "_"), collapse = ""), names(mygroups))]
em_output <- parse_em_output(prot, model, categories)
best <- best_output(em_output)
path <- file.path(getwd(), "output", "wood_likelihood", model, prot, names(best), fsep = .Platform$file.sep)
em_file <-  readLines(path)
zeroline <- tail(grep('^\\s+\\[,1\\]', em_file,  value = FALSE, perl = TRUE), 1)
lowpart <- em_file[seq(zeroline+1,length(em_file),1)]
lastline <- head(grep('^\\[1\\]', lowpart,  value = FALSE, perl = TRUE), 1)
rpart <- lowpart[seq(1, lastline-1, 1)]
count_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(count_cores)
clusterExport(cl, list("prot", "rpart", "prot_groups", "splitted", "model", "categories", "best"), envir = environment())
clusterCall(cl, function() library(evolike))
prot_groups_names <- names(prot_groups)
em_results_list <- parLapply(cl, prot_groups_names, function(group_name){
sink (file.path(getwd(), "output","group_likelihood", "chisq", model, prot, group_name, fsep = .Platform$file.sep))
group <- prot_groups[group_name][[1]]
rvectors <- lapply(rpart, function(row){
splittedrow <- unlist(strsplit(row, '\\s+'))
my_params <- lapply( tail(splittedrow, length(splittedrow)), function(elm){
elm
})
})
df <- data.frame(matrix(unlist(rvectors), nrow=length(rvectors), byrow=T),stringsAsFactors=FALSE)
rownames(df) <- df[,1]
df <- df[,seq(2, ncol(df), 1)]
group_pattern <- sapply(group, function (e){
paste(c("^", e, "\\."), collapse = "")
})
grepper <- paste(group_pattern,collapse="|")
group_nodes <- grep(grepper, rownames(df))
group_df <- df[group_nodes,]
compl_nodes <- !(seq(1,nrow(df),1) %in% group_nodes)
compl_df <- df[compl_nodes,]
ageing <- sapply(seq(1, categories, 1), function(cat){
if (best[[1]]$params[cat,"p"] > 1){TRUE} else {FALSE}
})
ageing_g <- sum(sapply(group_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_g <- sum(sapply(group_df[,!(ageing)], function(e){sum(as.numeric(e))}))
ageing_c <- sum(sapply(compl_df[,(ageing)], function(e){sum(as.numeric(e))}))
adapt_c <- sum(sapply(compl_df[,!(ageing)], function(e){sum(as.numeric(e))}))
tbl <- matrix(c(ageing_g, adapt_g, ageing_c, adapt_c), ncol = 2, byrow = TRUE, nrow = 2)
colnames(tbl) <- c("ageing", "adapt")
rownames(tbl) <- c("group", "compl")
print(tbl)
print(chisq.test(tbl))
print(fisher.test(tbl))
sink()
})
stopCluster(cl)
fv <- c(1,3,4,4)
tail(fv,3)[[1]]
tail(fv,3)[1]
prot <- "h1"
dir <- file.path(getwd(), "output", "group_likelihood", model, prot, fsep = .Platform$file.sep)
allfiles <- list.files(path = dir, pattern = paste(c(prot,"_.*"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
complfiles <- list.files(path = dir, pattern = paste(c(prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- setdiff(allfiles, complfiles)
print (groupfiles)
print (complfiles)
prot <- "h1"
dir <- file.path(getwd(), "output", "group_likelihood", model, prot, fsep = .Platform$file.sep)
allfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- setdiff(allfiles, complfiles)
print (groupfiles)
print (complfiles)
prot <- "h1"
dir <- file.path(getwd(), "output", "group_likelihood", model, prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
tochop <- tail(gregexpr('_', f))
substr(f,1, tochop)
})
print (groupfiles)
print (complfiles)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
tochop <- tail(gregexpr('_', f))[[1]]
substr(f,1, tochop)
})
print (groupfiles)
print (complfiles)
dir <- file.path(getwd(), "output", "group_likelihood", model, prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
print(f)
print (tail(gregexpr('_', f))[[1]])
substr(f,1, tochop)
})
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
print(f)
print (tail(gregexpr('_', f), 1))
substr(f,1, tochop)
})
groupfiles <- sapply(complfiles, function(f){
print(f)
print (tail(gregexpr('_', f), 1))
substr(f,1, tochop)
})
df <-"C:/Users/weidewind/workspace/evolike/output/group_likelihood/weibull/h1/h1_antigenic_complement"
fg <- gregexpr('_', f)
fg
fg[1]
fg[[1]]
fg[[1]][1]
?gregexpr
fg <- regexpr('_', f)
fg
fg <- gregexpr('_', f)
fg[[1]][length(fg[[1]])]
df <- "12_456789_1"
fg <- gregexpr('_', f)
fg[[1]][length(fg[[1]])]
fg <- gregexpr('_', df)
fg[[1]][length(fg[[1]])]
groupfiles <- sapply(complfiles, function(f){
print(f)
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop)
})
print (groupfiles)
groupfiles <- sapply(complfiles, function(f){
print(f)
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
print (complfiles)
output <- lapply(groupfiles, function(wgfile){
gfname <-baseline(wgfile)
wgroup_file <-  readLines(gfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (gfname)
print (lr)
})
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(gfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (gfname)
print (lr)
})
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, wgfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (gfname)
print (lr)
})
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (gfname)
print (lr)
})
prot <- "h3"
dir <- file.path(getwd(), "output", "group_likelihood", "weibull", prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
print (complfiles)
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (gfname)
print (lr)
})
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (eg_lnL)
print (wg_lnL)
print (gfname)
print (lr)
})
prot <- "h1"
dir <- file.path(getwd(), "output", "group_likelihood", "weibull", prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
print (complfiles)
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (eg_lnL)
print (wg_lnL)
print (gfname)
print (lr)
})
prot <- "h3"
dir <- file.path(getwd(), "output", "group_likelihood", "weibull", prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
print (complfiles)
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (eg_lnL)
print (wg_lnL)
print (gfname)
print (lr)
})
prot <- "h3"
categories <- 3
model <- "weibull" # weibull or exponential
#em_output <- parse_em_output(prot, model, categories)
em_output <- parse_group_output(prot, model, categories)
em_output
show_em_all_results(em_output, model)
em_output <- parse_em_output(prot, model, categories)
em_output
show_em_all_results(em_output, model)
parse_group_LRT("h1")
parse_group_LRT <-function(prot){
#prot <- "h3"
dir <- file.path(getwd(), "output", "group_likelihood", "weibull", prot, fsep = .Platform$file.sep)
complfiles <- list.files(path = dir, pattern = paste(c("^", prot,"_.*_complement"), collapse=""), all.files = FALSE,
full.names = TRUE, recursive = FALSE)
groupfiles <- sapply(complfiles, function(f){
temp <- gregexpr('_', f)
tochop <- temp[[1]][length(temp[[1]])]
substr(f,1, tochop-1)
})
print (groupfiles)
print (complfiles)
output <- lapply(groupfiles, function(wgfile){
gfname <-basename(wgfile)
wgroup_file <-  readLines(wgfile)
wg_grepped_lnL <- tail(wgroup_file, 5)[1]
wg_lnL <- as.numeric(strsplit(wg_grepped_lnL, '\\s+')[[1]][2])
egroup_file <-  readLines(file.path(getwd(), "output", "group_likelihood", "exponential", prot, gfname, fsep = .Platform$file.sep))
eg_grepped_lnL <- tail(egroup_file, 5)[1]
eg_lnL <- as.numeric(strsplit(eg_grepped_lnL, '\\s+')[[1]][2])
lr <- 2*(wg_lnL-eg_lnL)
print (eg_lnL)
print (wg_lnL)
print (gfname)
print (lr)
})
}
parse_group_LRT("h1")
