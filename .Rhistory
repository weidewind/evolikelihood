rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
3dplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red")
3dplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue")
3dplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green")
3dplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], color= "yellow")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow")
for (i in c(1,2)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], color= "yellow", type="h")
for (i in c(1,2)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], color= "yellow", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
parameters[2,"lambda"]
emlist$parameters[2,"lambda"]
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0,0.4), ylim= c(0,4), zlim = c(0,1))
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], color= "yellow", type="h")
for (i in c(1,2)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], color= "yellow", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0,0.4), ylim= c(0,4), zlim = c(0,1))
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow", type="h")
for (i in c(1,2)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "yellow", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0,0.4), ylim= c(0,4), zlim = c(0,1))
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
for (i in c(1,2)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0,0.4), ylim= c(0,4), zlim = c(0,1))
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
dev.new()
h1=dev.cur()
myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
dev.new()
h2=dev.cur()
myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
dev.new()
h3=dev.cur()
myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
dev.new()
h4=dev.cur()
myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
dev.new()
h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
dev.set(h1)
myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
dev.set(h2)
myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
dev.set(h3)
myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
dev.set(h4)
myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
dev.new()
h1=dev.cur()
myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
dev.new()
h2=dev.cur()
myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
dev.new()
h3=dev.cur()
myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
dev.new()
h4=dev.cur()
myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
dev.new()
h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19)
dev.set(h5)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
dev.set(h1)
myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
dev.set(h2)
myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
dev.set(h3)
myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
dev.set(h4)
myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
dev.new()
h1=dev.cur()
myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
dev.new()
h2=dev.cur()
myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
dev.new()
h3=dev.cur()
myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
dev.new()
h4=dev.cur()
myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
dev.new()
h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0, 0.3), ylim = c(0,4), zlim = c(0,1), pch=19)
dev.set(h5)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
dev.set(h1)
myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
dev.set(h2)
myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
dev.set(h3)
myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
dev.set(h4)
myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist2 <-em (data=data_filtered, parameters =emlist$parameters, weights=emlist$weights)
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
#  dev.new()
#  h1=dev.cur()
#  myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h2=dev.cur()
#  myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h3=dev.cur()
# myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
# dev.new()
#  h4=dev.cur()
# myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
# dev.new()
# h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0, 0.3), ylim = c(0,4), zlim = c(0,1), pch=19)
# dev.set(h5)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in c(1,2,3,4,5,6)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
# dev.set(h1)
#  myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
# dev.set(h2)
# myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
# dev.set(h3)
#  myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
# dev.set(h4)
# myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
# dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
#  dev.new()
#  h1=dev.cur()
#  myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h2=dev.cur()
#  myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h3=dev.cur()
# myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
# dev.new()
#  h4=dev.cur()
# myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
# dev.new()
# h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0, 0.3), ylim = c(0,4), zlim = c(0,1), pch=19)
# dev.set(h5)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in seq(1,20,1)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
# dev.set(h1)
#  myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
# dev.set(h2)
# myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
# dev.set(h3)
#  myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
# dev.set(h4)
# myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
# dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
em <- function(data, parameters, weights, cluster.number= 4, mutation_position = "middle"){
#todo: data must be filtered (before initialization?), and this new set must be used in em/ params (fo revery node) are not to be confused with cluster paramteres.
#  init <- initialize (data, params=parameters, mutation_position = mutation_position, cluster.number = cluster.number, method = "cluster")
#  parameters <- init$iparameters
#  weights <- init$iiweights
#  dev.new()
#  h1=dev.cur()
#  myplot1 <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", pch=19, xlim = c(max(parameters[1,"lambda"] - 0.1,0),parameters[1,"lambda"] + 0.1), ylim= c(max(parameters[1,"p"] - 1,0),parameters[1,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h2=dev.cur()
#  myplot2 <- scatterplot3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], color= "blue", type="h", pch=19, xlim = c(max(parameters[2,"lambda"] - 0.1,0),parameters[2,"lambda"] + 0.1), ylim= c(max(parameters[2,"p"] - 1,0),parameters[2,"p"] + 1), zlim = c(0,1))
#  dev.new()
#  h3=dev.cur()
# myplot3 <- scatterplot3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], color= "green", type="h", pch=19, xlim = c(max(parameters[3,"lambda"] - 0.1,0),parameters[3,"lambda"] + 0.1), ylim= c(max(parameters[3,"p"] - 1,0),parameters[3,"p"] + 1), zlim = c(0,1))
# dev.new()
#  h4=dev.cur()
# myplot4 <- scatterplot3d(parameters[3,"lambda"], parameters[4,"p"], weights[4], color= "black", type="h", pch=19, xlim = c(max(parameters[4,"lambda"] - 0.1,0),parameters[4,"lambda"] + 0.1), ylim= c(max(parameters[4,"p"] - 1,0),parameters[4,"p"] + 1), zlim = c(0,1))
# dev.new()
# h5=dev.cur()
myplot <- scatterplot3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], color= "red", type="h", xlim = c(0, 0.3), ylim = c(0,4), zlim = c(0,1), pch=19)
# dev.set(h5)
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", pch=19, type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", pch=19, type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black",pch=19,  type="h")
for (i in seq(1,30,1)){
print (paste(c("------------Step ", i), collapse=""))
rkvectors <- compute_rkvectors(data=data, parameters=parameters, weights=weights)
parameters <- compute_params(data=data, rkvectors=rkvectors, mutation_position = mutation_position)
weights <- compute_weights(rkvectors)
print(weights)
# dev.set(h1)
#  myplot1$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
# dev.set(h2)
# myplot2$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
# dev.set(h3)
#  myplot3$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
# dev.set(h4)
# myplot4$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
# dev.set(h5)
myplot$points3d(parameters[1,"lambda"], parameters[1,"p"], weights[1], col= "red", type="h")
myplot$points3d(parameters[2,"lambda"], parameters[2,"p"], weights[2], col= "blue", type="h")
myplot$points3d(parameters[3,"lambda"], parameters[3,"p"], weights[3], col= "green", type="h")
myplot$points3d(parameters[4,"lambda"], parameters[4,"p"], weights[4], col= "black", type="h")
}
list(parameters=parameters, rkvectors=rkvectors, weights=weights)
}
emlist3 <-em (data=data_filtered, parameters =init_params, weights=init_weights)
emlist4 <-em (data=data_filtered, parameters =emlist3$parameters, weights=emlist3$weights)
emlist4
emlist3
dirpath <- paste(c(getwd(), "/R/"),collapse= "")
source(paste(c(dirpath, "MLE_functions.R"),collapse= ""))
source(paste(c(dirpath, "MLE_parameters.R"),collapse= ""))
source(paste(c(dirpath, "LRT.R"),collapse= ""))
library('RUnit')
dirpath <- paste(c(getwd(), "/R/"),collapse= "")
source(paste(c(dirpath, "MLE_functions.R"),collapse= ""))
source(paste(c(dirpath, "MLE_parameters.R"),collapse= ""))
source(paste(c(dirpath, "LRT.R"),collapse= ""))
source(paste(c(dirpath, "EM.R"),collapse= ""))
test.suite <- defineTestSuite("basic",
#dirs = file.path("tests"),
paste(c(dirpath, "tests"),collapse= ""),
testFileRegexp = '.R')
test.result <- runTestSuite(test.suite)
printTextProtocol(test.result)
library('RUnit')
dirpath <- paste(c(getwd(), "/R/"),collapse= "")
source(paste(c(dirpath, "MLE_functions.R"),collapse= ""))
source(paste(c(dirpath, "MLE_parameters.R"),collapse= ""))
source(paste(c(dirpath, "LRT.R"),collapse= ""))
source(paste(c(dirpath, "EM.R"),collapse= ""))
test.suite <- defineTestSuite("basic",
#dirs = file.path("tests"),
paste(c(dirpath, "tests"),collapse= ""),
testFileRegexp = '.R')
test.result <- runTestSuite(test.suite)
library('RUnit')
dirpath <- paste(c(getwd(), "/R/"),collapse= "")
source(paste(c(dirpath, "MLE_functions.R"),collapse= ""))
source(paste(c(dirpath, "MLE_parameters.R"),collapse= ""))
source(paste(c(dirpath, "LRT.R"),collapse= ""))
source(paste(c(dirpath, "EM.R"),collapse= ""))
test.suite <- defineTestSuite("basic",
#dirs = file.path("tests"),
paste(c(dirpath, "tests"),collapse= ""),
testFileRegexp = '.R')
test.result <- runTestSuite(test.suite)
printTextProtocol(test.result)
install.packages("rootSolve")
install.packages("nleqslv")
install.packages("rbenchmark")
install.packages("nleqslv")
install.packages("rbenchmark")
list.of.packages <- c("plotly")
new.packages <- setdiff(list.of.packages, installed.packages()[,"Package"])
print (new.packages)
dirpath <- paste(c(getwd(), "/R/"),collapse= "")
source(paste(c(dirpath, "MLE_functions.R"),collapse= ""))
source(paste(c(dirpath, "MLE_parameters.R"),collapse= ""))
source(paste(c(dirpath, "LRT.R"),collapse= ""))
source(paste(c(dirpath, "EM.R"),collapse= ""))
test.suite <- defineTestSuite("basic",
#dirs = file.path("tests"),
paste(c(dirpath, "tests"),collapse= ""),
testFileRegexp = '.R')
test.result <- runTestSuite(test.suite)
