{
    "contents" : "#!/usr/bin/env Rscript\nlist.of.packages <- c(\"parallel\", \"ArgumentCheck\", \"optparse\")\nnew.packages <- setdiff(list.of.packages, installed.packages()[,\"Package\"])\nif(length(new.packages)) install.packages(new.packages, repos='http://cran.us.r-project.org')\ninstall.packages(file.path(getwd(), \"evolike\",fsep = .Platform$file.sep), repos = NULL, type=\"source\")\nlibrary(evolike)\nlibrary(parallel)\nlibrary(optparse)\n\n\noption_list = list(\n  make_option(c(\"-p\", \"--prot\"), type=\"character\", default=NULL, \n              help=\"protein: h1, h3, n1 or n2\", metavar=\"character\"),\n  make_option(c(\"-i\", \"--init_method\"), type=\"character\", default=\"cluster\", \n              help=\"initialization method: clusterization of parameters (cluster) or radomly chosen parameters (random) [default= %default]\", metavar=\"character\"),\n  make_option(c(\"-t\", \"--trial\"), type=\"integer\", default=1, \n              help=\"number of trial\", metavar=\"integer\"),\n  make_option(c(\"-c\", \"--categories\"), type=\"integer\", default=3, \n              help=\"number of categories\", metavar=\"integer\"),\n  make_option(c(\"-m\", \"--model\"), type=\"character\", default=\"weibull\", \n              help=\"model distr: weibull or exponential\", metavar=\"character\")\n); \n\nopt_parser = OptionParser(option_list=option_list);\nopt = parse_args(opt_parser);\n\nwith (opt, {\n  \n  Check <- ArgumentCheck::newArgCheck()\n  \n  if (!(prot %in% c(\"h1\", \"h3\", \"n1\", \"n2\"))){ \n    ArgumentCheck::addError(\n      msg = \"valid 'prot' options: h1, h3, n1, n2\",\n      argcheck = Check\n    )\n  }\n  if (!(init_method %in% c(\"cluster\", \"random\"))){\n    ArgumentCheck::addError(\n      msg = \"valid 'init_method' options: cluster, random\",\n      argcheck = Check\n    )\n  }\n  \n  if (categories < 1){\n    ArgumentCheck::addError(\n      msg = \"'categories' must be >= 1\",\n      argcheck = Check\n    )\n  }\n  if (all.equal(trial, as.integer(trial))){\n    ArgumentCheck::addError(\n      msg = \"'trial' must be an integer\",\n      argcheck = Check\n    )\n  }\n  if (!(model %in% c(\"weibull\", \"exponential\"))){\n    ArgumentCheck::addError(\n      msg = \"valid 'model' options: weibull, exponential\",\n      argcheck = Check\n    )\n  }\n\n  #* Return errors and warnings (if any)\n  ArgumentCheck::finishArgCheck(Check)\n  print (getwd())\n  #print (file.path(getwd(), \"output\",\"toys\", model, paste(c(prot, \"_\", init_method, \"_\", categories, \"_\", trial), collapse=\"\"),fsep = .Platform$file.sep))\n  sink (file.path(getwd(), \"output\",\"toys\", model, paste(c(prot, \"_\", init_method, \"_\", categories, \"_\", trial), collapse=\"\"),fsep = .Platform$file.sep))\n  print (\"So far so good\")\n  sink()\n  \n})\n  \n ",
    "created" : 1464952314008.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "496929319",
    "id" : "D448C440",
    "lastKnownWriteTime" : 1464960624,
    "path" : "C:/Users/weidewind/workspace/evolike/demo/toy_for_perl.R",
    "project_path" : "demo/toy_for_perl.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}