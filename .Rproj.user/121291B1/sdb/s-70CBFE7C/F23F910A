{
    "contents" : "prot <- \"h1\"\ninpath <- paste(c(getwd(), \"/input/\"),collapse= \"\")\nprot_data <-  read.csv(paste(c(inpath, prot,\"_for_LRT.csv\"), collapse=\"\"),stringsAsFactors=FALSE)  \nsplitted <- split(prot_data, list(prot_data$site, prot_data$ancestor_node), drop=TRUE)\n\n\ntest_compute_d_vector <- function(){\n\n  rkvector <- rep(1, length(splitted))\n  names(rkvector) <- names(splitted)\n  D_vector<- compute_d_vector(splitted, rkvector)\n  checkEquals(sum(D_vector), 524)\n\n}\n\n\ntest_single_mode_supplier <- function() {\n  #arrange\n  nodename <-  \"211.INTNODE1224\" \n  #act\n  sup <- supplier(data=splitted,  rkvector=c(\"211.INTNODE1224\" = 1), elm = nodename, mutation_position = \"middle\")\n  #assert\n  checkTrue(sup$r == 1)\n  checkEquals(nrow(sup$no_events_branches), nrow(splitted[[nodename]]))\n  checkEquals(nrow(sup$events_branches), 1)\n  checkEquals(sup$events_branches[\"t_branch_start\"][[1]], 15)\n  checkEquals(nrow(sup$no_events_branches) + nrow(sup$events_branches), 5)\n  #total subtree length must stay the same\n  checkEquals(sum (sup$events_branches[\"t_branch_end\"] - sup$events_branches[\"t_branch_start\"]) + sum (sup$no_events_branches[\"t_branch_end\"] - sup$no_events_branches[\"t_branch_start\"]), \n            sum(splitted[[nodename]][\"t_branch_end\"] - splitted[[nodename]][\"t_branch_start\"]))\n}\n\ntest_group_mode_supplier <- function() {\n  #arrange\n  rkvector <- rep(1, length(splitted))\n  names(rkvector) <- names(splitted)\n  #act\n  sup <- supplier(data=splitted,  rkvector=rkvector, elm = \"211.INTNODE1224\", mutation_position = \"middle\")\n  #assert\n  checkTrue(sup$r == 1)\n  checkEquals(nrow(sup$no_events_branches), nrow(splitted[[nodename]]))\n  checkEquals(nrow(sup$events_branches), 1)\n  checkEquals(sup$events_branches[\"t_branch_start\"][[1]], 15)\n  checkEquals(nrow(sup$no_events_branches) + nrow(sup$events_branches), 5)\n  #total subtree length must stay the same\n  checkEquals(sum (sup$events_branches[\"t_branch_end\"] - sup$events_branches[\"t_branch_start\"]) + sum (sup$no_events_branches[\"t_branch_end\"] - sup$no_events_branches[\"t_branch_start\"]), \n              sum(splitted[[nodename]][\"t_branch_end\"] - splitted[[nodename]][\"t_branch_start\"]))\n\n}\n\ntest_group_mode_lambda_derivative_exp <- function() {\n  #arrange\n  threenodes <- splitted[c(\"73.INTNODE1254\", \"203.INTNODE1737\", \"169.INTNODE1760\")]\n  rkvector <- c(1,1,0)\n  names(rkvector) <- names(threenodes)\n  pars <- list(data = threenodes, rkvector = rkvector, mutation_position = \"middle\")\n  sup73 <- supplier(data=threenodes,  rkvector=rkvector, elm = \"73.INTNODE1254\", mutation_position = \"middle\")\n  sup203 <- supplier(data=threenodes,  rkvector=rkvector, elm = \"203.INTNODE1737\", mutation_position = \"middle\")\n  #act\n  lambda <- lambda_derivative_exp(pars)\n  #assert\n  checkEquals(lambda, 2/23)\n  \n  x <- 1\n  \n  numsum <- sum(p_numerator_vector(sup73$no_events_branches,x)) + sum(p_numerator_vector(sup203$no_events_branches,x))\n  checkEquals(numsum, 8*log(8) + 7.5*log(7.5) - 6*log(6) + 7*log(7) + 2*log(2) + 6.5*log(6.5) - 4*log(4))\n  denomsum <-sum(p_denominator_vector(sup73$no_events_branches,x)) + sum(p_denominator_vector(sup203$no_events_branches,x))\n  checkEquals(denomsum, 1.5 + 1 +2 +6 + 1 +2.5 + 4 + 3 +2)\n  alphasum <- sum(p_talpha_vector(sup73$events_branches, \"middle\")) + sum(p_talpha_vector(sup203$events_branches, \"middle\"))\n  checkEquals(alphasum, log(7.5) + log(6.5))\n  d <- sum(compute_d_vector(threenodes, rkvector))\n  checkEquals(d,2)\n  p <- p_derivative(x, pars, draw=TRUE)\n  checkEquals(p, 2*(8*log(8) + 7.5*log(7.5) - 6*log(6) + 7*log(7) + 2*log(2) + 6.5*log(6.5) - 4*log(4))/23 - log(7.5) - log(6.5)-2)\n}",
    "created" : 1460975074793.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3857729498",
    "id" : "F23F910A",
    "lastKnownWriteTime" : 1461324364,
    "path" : "C:/Users/weidewind/workspace/evolikelihood/R/tests/MLE_functions_test.R",
    "project_path" : "R/tests/MLE_functions_test.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}