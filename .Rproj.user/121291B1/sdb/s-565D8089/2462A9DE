{
    "contents" : "#!/usr/bin/env Rscript\nlist.of.packages <- c(\"parallel\", \"ArgumentCheck\", \"optparse\")\nnew.packages <- setdiff(list.of.packages, installed.packages()[,\"Package\"])\nif(length(new.packages)) install.packages(new.packages, repos='http://cran.us.r-project.org')\ninstall.packages(file.path(getwd(), fsep = .Platform$file.sep), repos = NULL, type=\"source\")\nprint (\" librarty \")\nlibrary(evolike)\nlibrary(parallel)\nlibrary(optparse)\nprint (\" optlist\")\n\noption_list = list(\n  make_option(c(\"-p\", \"--prot\"), type=\"character\", default=NULL, \n              help=\"protein: h1, h3, n1 or n2\", metavar=\"character\"),\n  make_option(c(\"-m\", \"--model\"), type=\"character\", default=\"weibull\", \n              help=\"model distr: weibull or exponential\", metavar=\"character\")\n); \n\nprint (\" parser \")\nopt_parser = OptionParser(option_list=option_list);\nopt = parse_args(opt_parser);\n\nwith (opt, {\n  \n  Check <- ArgumentCheck::newArgCheck()\n  \n  if (!(prot %in% c(\"h1\", \"h3\", \"n1\", \"n2\"))){ \n    ArgumentCheck::addError(\n      msg = \"valid 'prot' options: h1, h3, n1, n2\",\n      argcheck = Check\n    )\n  }\n  \n  if (!(model %in% c(\"weibull\", \"exponential\"))){\n    ArgumentCheck::addError(\n      msg = \"valid 'model' options: weibull, exponential\",\n      argcheck = Check\n    )\n  }\n  \n  #* Return errors and warnings (if any)\n  ArgumentCheck::finishArgCheck(Check)\n  \n  \n  ## load mygroups \n  print (\" Trying to attach data \")\n  data(\"mygroups\")\n  print (\" Yaaaaaaap! \")",
    "created" : 1463585824789.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1722987643",
    "id" : "2462A9DE",
    "lastKnownWriteTime" : 1463586848,
    "path" : "C:/Users/weidewind/workspace/evolike/demo/test.R",
    "project_path" : "demo/test.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}